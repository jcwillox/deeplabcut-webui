name: "Frontend"

defaults:
  run:
    working-directory: ./frontend

on:
  push:
    paths:
      - frontend/**
      - .github/workflows/frontend.yml
  pull_request:
    paths:
      - frontend/**
      - .github/workflows/frontend.yml
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@v2

      - name: "Extract engines"
        id: engines
        run: |
          cp ./package.json ..
          cp ./pnpm-lock.yaml ..
          echo ::set-output name=node::$(jq --raw-output .engines.node ./package.json)

      - name: "Setup pnpm"
        uses: pnpm/action-setup@v2

      - name: "Setup node"
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.engines.outputs.node }}
          cache: ${{ !env.ACT && 'pnpm' || '' }}

      - name: "Install dependencies"
        run: pnpm install

      - name: "Run Lint"
        run: pnpm run lint

      - name: "Check format"
        run: pnpm run format:check

      - name: "Run Typecheck"
        run: pnpm run typecheck

  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@v2

      - name: "Extract engines"
        id: engines
        run: |
          cp ./package.json ..
          cp ./pnpm-lock.yaml ..
          echo ::set-output name=node::$(jq --raw-output .engines.node ./package.json)

      - name: "Setup pnpm"
        uses: pnpm/action-setup@v2

      - name: "Setup node"
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.engines.outputs.node }}
          cache: ${{ !env.ACT && 'pnpm' || '' }}

      - name: "Install dependencies"
        run: pnpm install

      - name: "Run Build"
        run: pnpm run build

      - name: "Run Tests"
        run: pnpm test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [lint, build]
    if: github.ref == 'refs/heads/main'
    concurrency: ci-${{ github.ref }}
    env:
      VITE_BASE: "/${{ github.event.repository.name }}/"
    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@v2

      - name: "Extract engines"
        id: engines
        run: |
          cp ./package.json ..
          cp ./pnpm-lock.yaml ..
          echo ::set-output name=node::$(jq --raw-output .engines.node ./package.json)

      - name: "Setup pnpm"
        uses: pnpm/action-setup@v2

      - name: "Setup node"
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.engines.outputs.node }}
          cache: ${{ !env.ACT && 'pnpm' || '' }}

      - name: "Install dependencies"
        run: pnpm install

      - name: "Run Build"
        run: |
          pnpm run build
          ln -s ./index.html ./dist/404.html

      - name: "Deploy ðŸš€"
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: frontend/dist
